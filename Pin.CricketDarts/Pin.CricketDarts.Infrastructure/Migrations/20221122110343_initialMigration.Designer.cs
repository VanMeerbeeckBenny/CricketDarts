// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pin.CricketDarts.Infrastructure.Data;

#nullable disable

namespace Pin.CricketDarts.Infrastructure.Migrations
{
    [DbContext(typeof(DbDartsContext))]
    [Migration("20221122110343_initialMigration")]
    partial class initialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MatchPlayer", b =>
                {
                    b.Property<Guid>("MatchesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MatchesId", "PlayersId");

                    b.HasIndex("PlayersId");

                    b.ToTable("MatchPlayer");

                    b.HasData(
                        new
                        {
                            MatchesId = new Guid("f58a9951-6c7e-4ae8-9a61-deabbfff2ff1"),
                            PlayersId = new Guid("6cb78aa5-a80e-4c05-8f87-c443cc03e1d5")
                        },
                        new
                        {
                            MatchesId = new Guid("5cd5798f-c2db-4481-b98a-e604eaec6730"),
                            PlayersId = new Guid("6cb78aa5-a80e-4c05-8f87-c443cc03e1d5")
                        },
                        new
                        {
                            MatchesId = new Guid("f58a9951-6c7e-4ae8-9a61-deabbfff2ff1"),
                            PlayersId = new Guid("e8607328-584e-4f53-91c8-27bc9bccf1c7")
                        },
                        new
                        {
                            MatchesId = new Guid("5cd5798f-c2db-4481-b98a-e604eaec6730"),
                            PlayersId = new Guid("e8607328-584e-4f53-91c8-27bc9bccf1c7")
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Match", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActiveGame")
                        .HasColumnType("bit");

                    b.Property<int>("PlayerOneScore")
                        .HasColumnType("int");

                    b.Property<int>("PlayerTwoScore")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Matches");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f58a9951-6c7e-4ae8-9a61-deabbfff2ff1"),
                            IsActiveGame = false,
                            PlayerOneScore = 0,
                            PlayerTwoScore = 0,
                            TimeStamp = new DateTime(2022, 11, 22, 12, 3, 43, 61, DateTimeKind.Local).AddTicks(7084)
                        },
                        new
                        {
                            Id = new Guid("5cd5798f-c2db-4481-b98a-e604eaec6730"),
                            IsActiveGame = false,
                            PlayerOneScore = 0,
                            PlayerTwoScore = 0,
                            TimeStamp = new DateTime(2022, 11, 22, 14, 3, 43, 61, DateTimeKind.Local).AddTicks(7119)
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Player");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6cb78aa5-a80e-4c05-8f87-c443cc03e1d5"),
                            Firstname = "Benny",
                            Lastname = "Van Meerbeeck"
                        },
                        new
                        {
                            Id = new Guid("e8607328-584e-4f53-91c8-27bc9bccf1c7"),
                            Firstname = "Arlette",
                            Lastname = "Verheugen"
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.PlayerThrow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ThrowId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("ThrowId");

                    b.ToTable("PlayerThrows");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8e7e5a4b-ae8e-40a9-8f8d-eec5dd7f752f"),
                            MatchId = new Guid("5cd5798f-c2db-4481-b98a-e604eaec6730"),
                            PlayerId = new Guid("6cb78aa5-a80e-4c05-8f87-c443cc03e1d5"),
                            ThrowId = new Guid("4f891845-faa8-4355-8488-aa85ec1394ca"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3e14936e-7ab3-4aa7-97cd-27f8231435a8"),
                            MatchId = new Guid("f58a9951-6c7e-4ae8-9a61-deabbfff2ff1"),
                            PlayerId = new Guid("6cb78aa5-a80e-4c05-8f87-c443cc03e1d5"),
                            ThrowId = new Guid("db2c392b-6280-4ec6-a915-54f3402178a6"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("86a00c7f-a3ed-475c-9682-cec441e2d279"),
                            MatchId = new Guid("f58a9951-6c7e-4ae8-9a61-deabbfff2ff1"),
                            PlayerId = new Guid("6cb78aa5-a80e-4c05-8f87-c443cc03e1d5"),
                            ThrowId = new Guid("045ab608-a24a-4269-b2f6-d04bfae64514"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("311b6256-76e8-4860-afd6-ccc5a7f95b31"),
                            MatchId = new Guid("f58a9951-6c7e-4ae8-9a61-deabbfff2ff1"),
                            PlayerId = new Guid("6cb78aa5-a80e-4c05-8f87-c443cc03e1d5"),
                            ThrowId = new Guid("24bc28f6-c105-44a6-8809-fcf2096b0e27"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8f83843e-432d-451c-94d0-f83cac83e871"),
                            MatchId = new Guid("5cd5798f-c2db-4481-b98a-e604eaec6730"),
                            PlayerId = new Guid("e8607328-584e-4f53-91c8-27bc9bccf1c7"),
                            ThrowId = new Guid("045ab608-a24a-4269-b2f6-d04bfae64514"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ada10a6d-e065-429d-a8ad-68e21204ae9e"),
                            MatchId = new Guid("f58a9951-6c7e-4ae8-9a61-deabbfff2ff1"),
                            PlayerId = new Guid("e8607328-584e-4f53-91c8-27bc9bccf1c7"),
                            ThrowId = new Guid("9e4f032b-b2ba-4c2a-87f9-a0bc919211af"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3203502b-1966-406f-946f-46642a675095"),
                            MatchId = new Guid("f58a9951-6c7e-4ae8-9a61-deabbfff2ff1"),
                            PlayerId = new Guid("e8607328-584e-4f53-91c8-27bc9bccf1c7"),
                            ThrowId = new Guid("e48db23d-4342-44c9-b5da-5335a8e057bf"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("382bac32-5ad4-4bee-8948-28ad4275a7b6"),
                            MatchId = new Guid("f58a9951-6c7e-4ae8-9a61-deabbfff2ff1"),
                            PlayerId = new Guid("e8607328-584e-4f53-91c8-27bc9bccf1c7"),
                            ThrowId = new Guid("7ee2d6f0-42d1-4e61-8132-0d0fa05aa5cb"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Point", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OriginalScore")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Score")
                        .IsUnique();

                    b.ToTable("Throws");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4f891845-faa8-4355-8488-aa85ec1394ca"),
                            OriginalScore = 15,
                            Score = 15
                        },
                        new
                        {
                            Id = new Guid("db2c392b-6280-4ec6-a915-54f3402178a6"),
                            OriginalScore = 15,
                            Score = 30
                        },
                        new
                        {
                            Id = new Guid("a73ccae1-1aa1-480b-98c1-2d56d6982119"),
                            OriginalScore = 15,
                            Score = 45
                        },
                        new
                        {
                            Id = new Guid("fc89f956-b077-465b-a012-e354e6e74382"),
                            OriginalScore = 16,
                            Score = 16
                        },
                        new
                        {
                            Id = new Guid("045ab608-a24a-4269-b2f6-d04bfae64514"),
                            OriginalScore = 16,
                            Score = 32
                        },
                        new
                        {
                            Id = new Guid("d12c7a1a-0587-4023-b509-8f8f14d60e1d"),
                            OriginalScore = 16,
                            Score = 48
                        },
                        new
                        {
                            Id = new Guid("24bc28f6-c105-44a6-8809-fcf2096b0e27"),
                            OriginalScore = 17,
                            Score = 17
                        },
                        new
                        {
                            Id = new Guid("74929ccf-34e1-4e36-8b70-76a63a724da5"),
                            OriginalScore = 17,
                            Score = 34
                        },
                        new
                        {
                            Id = new Guid("9e4f032b-b2ba-4c2a-87f9-a0bc919211af"),
                            OriginalScore = 17,
                            Score = 51
                        },
                        new
                        {
                            Id = new Guid("12f5f777-661b-43a3-aa4a-d3bdd71debac"),
                            OriginalScore = 18,
                            Score = 18
                        },
                        new
                        {
                            Id = new Guid("9c1f3bec-3ec3-4196-87a0-83674573928a"),
                            OriginalScore = 18,
                            Score = 36
                        },
                        new
                        {
                            Id = new Guid("77263662-d6d7-44bd-a4b3-622238c42b32"),
                            OriginalScore = 18,
                            Score = 54
                        },
                        new
                        {
                            Id = new Guid("d4eca901-88d6-4869-9e94-22fd87647d57"),
                            OriginalScore = 19,
                            Score = 19
                        },
                        new
                        {
                            Id = new Guid("dacbb0ea-4eb4-407f-9ab9-301649935540"),
                            OriginalScore = 19,
                            Score = 38
                        },
                        new
                        {
                            Id = new Guid("3268cd2c-49a8-4d90-8f1e-029fc9e83585"),
                            OriginalScore = 19,
                            Score = 57
                        },
                        new
                        {
                            Id = new Guid("a2064ea3-4e50-4b04-a07b-920efee29f53"),
                            OriginalScore = 20,
                            Score = 20
                        },
                        new
                        {
                            Id = new Guid("e48db23d-4342-44c9-b5da-5335a8e057bf"),
                            OriginalScore = 20,
                            Score = 40
                        },
                        new
                        {
                            Id = new Guid("a764654b-de5e-41a0-b8c1-b5f0b376607d"),
                            OriginalScore = 20,
                            Score = 60
                        },
                        new
                        {
                            Id = new Guid("3a002642-4de8-4645-b9aa-0098f7f45622"),
                            OriginalScore = 25,
                            Score = 25
                        },
                        new
                        {
                            Id = new Guid("7ee2d6f0-42d1-4e61-8132-0d0fa05aa5cb"),
                            OriginalScore = 25,
                            Score = 50
                        });
                });

            modelBuilder.Entity("MatchPlayer", b =>
                {
                    b.HasOne("Pin.CricketDarts.Core.Entities.Match", null)
                        .WithMany()
                        .HasForeignKey("MatchesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pin.CricketDarts.Core.Entities.Player", null)
                        .WithMany()
                        .HasForeignKey("PlayersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.PlayerThrow", b =>
                {
                    b.HasOne("Pin.CricketDarts.Core.Entities.Match", "Match")
                        .WithMany()
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pin.CricketDarts.Core.Entities.Player", "Player")
                        .WithMany("AllThrows")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pin.CricketDarts.Core.Entities.Point", "Throws")
                        .WithMany("PlayerThrows")
                        .HasForeignKey("ThrowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("Player");

                    b.Navigation("Throws");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Player", b =>
                {
                    b.Navigation("AllThrows");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Point", b =>
                {
                    b.Navigation("PlayerThrows");
                });
#pragma warning restore 612, 618
        }
    }
}
