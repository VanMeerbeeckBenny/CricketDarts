// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pin.CricketDarts.Infrastructure.Data;

#nullable disable

namespace Pin.CricketDarts.Infrastructure.Migrations
{
    [DbContext(typeof(DbDartsContext))]
    partial class DbDartsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MatchPlayer", b =>
                {
                    b.Property<Guid>("MatchesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MatchesId", "PlayersId");

                    b.HasIndex("PlayersId");

                    b.ToTable("MatchPlayer");

                    b.HasData(
                        new
                        {
                            MatchesId = new Guid("d004a7bc-fdbe-4863-b3a7-f43bc7768d06"),
                            PlayersId = new Guid("e6104999-3a67-4c2b-8a75-be59e8f3b45c")
                        },
                        new
                        {
                            MatchesId = new Guid("f0b44a72-f0ba-4bda-95f7-c1a00f7e9c2a"),
                            PlayersId = new Guid("e6104999-3a67-4c2b-8a75-be59e8f3b45c")
                        },
                        new
                        {
                            MatchesId = new Guid("d004a7bc-fdbe-4863-b3a7-f43bc7768d06"),
                            PlayersId = new Guid("f61b7ff6-37ca-478d-ba07-fee73a7d3ce2")
                        },
                        new
                        {
                            MatchesId = new Guid("f0b44a72-f0ba-4bda-95f7-c1a00f7e9c2a"),
                            PlayersId = new Guid("f61b7ff6-37ca-478d-ba07-fee73a7d3ce2")
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Match", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActiveGame")
                        .HasColumnType("bit");

                    b.Property<int>("PlayerOneScore")
                        .HasColumnType("int");

                    b.Property<int>("PlayerTwoScore")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Matches");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d004a7bc-fdbe-4863-b3a7-f43bc7768d06"),
                            IsActiveGame = false,
                            PlayerOneScore = 0,
                            PlayerTwoScore = 0,
                            TimeStamp = new DateTime(2022, 11, 17, 15, 16, 31, 652, DateTimeKind.Local).AddTicks(5206)
                        },
                        new
                        {
                            Id = new Guid("f0b44a72-f0ba-4bda-95f7-c1a00f7e9c2a"),
                            IsActiveGame = false,
                            PlayerOneScore = 0,
                            PlayerTwoScore = 0,
                            TimeStamp = new DateTime(2022, 11, 17, 17, 16, 31, 652, DateTimeKind.Local).AddTicks(5243)
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Player");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e6104999-3a67-4c2b-8a75-be59e8f3b45c"),
                            Name = "Benny"
                        },
                        new
                        {
                            Id = new Guid("f61b7ff6-37ca-478d-ba07-fee73a7d3ce2"),
                            Name = "Yoran"
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.PlayerThrow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ThrowId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("ThrowId");

                    b.ToTable("PlayerThrows");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4c412b6a-7f76-490b-88e2-575bdb51e8e9"),
                            MatchId = new Guid("f0b44a72-f0ba-4bda-95f7-c1a00f7e9c2a"),
                            PlayerId = new Guid("e6104999-3a67-4c2b-8a75-be59e8f3b45c"),
                            ThrowId = new Guid("c4cec053-2d99-4d06-a041-eab36a1e0c2a"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("140b944d-4600-406b-8b4e-1990a1a5c7ee"),
                            MatchId = new Guid("d004a7bc-fdbe-4863-b3a7-f43bc7768d06"),
                            PlayerId = new Guid("e6104999-3a67-4c2b-8a75-be59e8f3b45c"),
                            ThrowId = new Guid("81fd397a-8180-493e-9706-7304e5c908c5"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("960f2d23-a55f-451c-8b15-861170e0a756"),
                            MatchId = new Guid("d004a7bc-fdbe-4863-b3a7-f43bc7768d06"),
                            PlayerId = new Guid("e6104999-3a67-4c2b-8a75-be59e8f3b45c"),
                            ThrowId = new Guid("e4804415-f1e5-4439-ae3b-f971077a724a"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6894acdb-1a87-40b8-a6b3-97e40f5c58dc"),
                            MatchId = new Guid("d004a7bc-fdbe-4863-b3a7-f43bc7768d06"),
                            PlayerId = new Guid("e6104999-3a67-4c2b-8a75-be59e8f3b45c"),
                            ThrowId = new Guid("9bad692e-4c9d-4f99-bb3b-6abf56f072e7"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d87c468f-f565-46d0-a0c3-55b98ac8f3fa"),
                            MatchId = new Guid("f0b44a72-f0ba-4bda-95f7-c1a00f7e9c2a"),
                            PlayerId = new Guid("f61b7ff6-37ca-478d-ba07-fee73a7d3ce2"),
                            ThrowId = new Guid("e4804415-f1e5-4439-ae3b-f971077a724a"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3321b64d-427d-4ac5-b86c-d43cf57c2697"),
                            MatchId = new Guid("d004a7bc-fdbe-4863-b3a7-f43bc7768d06"),
                            PlayerId = new Guid("f61b7ff6-37ca-478d-ba07-fee73a7d3ce2"),
                            ThrowId = new Guid("a6a56027-ff15-4c10-8356-2cdf7cc0ef02"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7fe414a5-bbc4-4203-87c2-9d0e832e8604"),
                            MatchId = new Guid("d004a7bc-fdbe-4863-b3a7-f43bc7768d06"),
                            PlayerId = new Guid("f61b7ff6-37ca-478d-ba07-fee73a7d3ce2"),
                            ThrowId = new Guid("b9ff2b1d-e79e-4eda-ba2e-15acb3469c4e"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7822bfa8-a22c-4279-943c-62667452d76a"),
                            MatchId = new Guid("d004a7bc-fdbe-4863-b3a7-f43bc7768d06"),
                            PlayerId = new Guid("f61b7ff6-37ca-478d-ba07-fee73a7d3ce2"),
                            ThrowId = new Guid("d0db700d-a3e3-4222-a05d-4082db75ece1"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Throw", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Throws");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c4cec053-2d99-4d06-a041-eab36a1e0c2a"),
                            Name = "Fifteen"
                        },
                        new
                        {
                            Id = new Guid("81fd397a-8180-493e-9706-7304e5c908c5"),
                            Name = "DoubleFifteen"
                        },
                        new
                        {
                            Id = new Guid("b1b27c0e-d814-41ef-94cd-f0d23f81b266"),
                            Name = "TripleFifteen"
                        },
                        new
                        {
                            Id = new Guid("62c29ebc-f067-4cc5-a704-9e08d2390d04"),
                            Name = "Sixteen"
                        },
                        new
                        {
                            Id = new Guid("e4804415-f1e5-4439-ae3b-f971077a724a"),
                            Name = "DoubleSixteen"
                        },
                        new
                        {
                            Id = new Guid("b5d24613-7810-42fb-a2bd-4cb61115411a"),
                            Name = "TripleSixteen"
                        },
                        new
                        {
                            Id = new Guid("9bad692e-4c9d-4f99-bb3b-6abf56f072e7"),
                            Name = "Seventeen"
                        },
                        new
                        {
                            Id = new Guid("b8c563f3-8dfb-4736-81f7-53e28c688473"),
                            Name = "DoubleSeventeen"
                        },
                        new
                        {
                            Id = new Guid("a6a56027-ff15-4c10-8356-2cdf7cc0ef02"),
                            Name = "TripleSeventeen"
                        },
                        new
                        {
                            Id = new Guid("15e8ceca-72f2-4ced-bea7-b72c573711d0"),
                            Name = "Eighteen"
                        },
                        new
                        {
                            Id = new Guid("ed43897b-cb27-46c7-9c7d-ff9b91020cc3"),
                            Name = "DoubleEighteen"
                        },
                        new
                        {
                            Id = new Guid("8907580d-45ae-499a-929a-a4085ec1f60d"),
                            Name = "TripleEigteen"
                        },
                        new
                        {
                            Id = new Guid("85d79339-ee20-4e92-8251-ca456e73d2fa"),
                            Name = "NineTeen"
                        },
                        new
                        {
                            Id = new Guid("169f2077-0d49-4199-b8c0-aeed4f9e658c"),
                            Name = "DoubleNineTeen"
                        },
                        new
                        {
                            Id = new Guid("3864c764-83d7-43ce-a229-cf9b2d224c8d"),
                            Name = "TripleNineTeen"
                        },
                        new
                        {
                            Id = new Guid("c4e1b884-c59d-49bd-a112-272536f5b79c"),
                            Name = "Twenty"
                        },
                        new
                        {
                            Id = new Guid("b9ff2b1d-e79e-4eda-ba2e-15acb3469c4e"),
                            Name = "DoubleTwenty"
                        },
                        new
                        {
                            Id = new Guid("c4d484ef-7cb7-4d5b-bc27-2a16b1d4f619"),
                            Name = "TripleTwenty"
                        },
                        new
                        {
                            Id = new Guid("f8ee652e-b90d-4aac-ac17-be7770796224"),
                            Name = "BullOuter"
                        },
                        new
                        {
                            Id = new Guid("d0db700d-a3e3-4222-a05d-4082db75ece1"),
                            Name = "BullInner"
                        });
                });

            modelBuilder.Entity("MatchPlayer", b =>
                {
                    b.HasOne("Pin.CricketDarts.Core.Entities.Match", null)
                        .WithMany()
                        .HasForeignKey("MatchesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pin.CricketDarts.Core.Entities.Player", null)
                        .WithMany()
                        .HasForeignKey("PlayersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.PlayerThrow", b =>
                {
                    b.HasOne("Pin.CricketDarts.Core.Entities.Match", "Match")
                        .WithMany()
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pin.CricketDarts.Core.Entities.Player", "Player")
                        .WithMany("AllThrows")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pin.CricketDarts.Core.Entities.Throw", "Throws")
                        .WithMany("PlayerThrows")
                        .HasForeignKey("ThrowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("Player");

                    b.Navigation("Throws");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Player", b =>
                {
                    b.Navigation("AllThrows");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Throw", b =>
                {
                    b.Navigation("PlayerThrows");
                });
#pragma warning restore 612, 618
        }
    }
}
