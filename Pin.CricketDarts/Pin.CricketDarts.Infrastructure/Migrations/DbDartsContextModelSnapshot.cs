// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pin.CricketDarts.Infrastructure.Data;

#nullable disable

namespace Pin.CricketDarts.Infrastructure.Migrations
{
    [DbContext(typeof(DbDartsContext))]
    partial class DbDartsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MatchPlayer", b =>
                {
                    b.Property<Guid>("MatchesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MatchesId", "PlayersId");

                    b.HasIndex("PlayersId");

                    b.ToTable("MatchPlayer");

                    b.HasData(
                        new
                        {
                            MatchesId = new Guid("fe34ff9b-c91f-4589-bd99-60849ddef2cc"),
                            PlayersId = new Guid("2b095fe1-8b94-4cd9-bfa9-d12cecff3637")
                        },
                        new
                        {
                            MatchesId = new Guid("16d9d127-f6ec-453e-86e6-188b1f9d91ef"),
                            PlayersId = new Guid("2b095fe1-8b94-4cd9-bfa9-d12cecff3637")
                        },
                        new
                        {
                            MatchesId = new Guid("fe34ff9b-c91f-4589-bd99-60849ddef2cc"),
                            PlayersId = new Guid("ab4f02c5-cd21-439d-9b3f-68d3c5699ef2")
                        },
                        new
                        {
                            MatchesId = new Guid("16d9d127-f6ec-453e-86e6-188b1f9d91ef"),
                            PlayersId = new Guid("ab4f02c5-cd21-439d-9b3f-68d3c5699ef2")
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Match", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActiveGame")
                        .HasColumnType("bit");

                    b.Property<int>("PlayerOneScore")
                        .HasColumnType("int");

                    b.Property<int>("PlayerTwoScore")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Matches");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fe34ff9b-c91f-4589-bd99-60849ddef2cc"),
                            IsActiveGame = false,
                            PlayerOneScore = 0,
                            PlayerTwoScore = 0,
                            TimeStamp = new DateTime(2022, 11, 21, 10, 58, 38, 606, DateTimeKind.Local).AddTicks(5937)
                        },
                        new
                        {
                            Id = new Guid("16d9d127-f6ec-453e-86e6-188b1f9d91ef"),
                            IsActiveGame = false,
                            PlayerOneScore = 0,
                            PlayerTwoScore = 0,
                            TimeStamp = new DateTime(2022, 11, 21, 12, 58, 38, 606, DateTimeKind.Local).AddTicks(5976)
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Player");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2b095fe1-8b94-4cd9-bfa9-d12cecff3637"),
                            Firstname = "Benny",
                            Lastname = "Van Meerbeeck"
                        },
                        new
                        {
                            Id = new Guid("ab4f02c5-cd21-439d-9b3f-68d3c5699ef2"),
                            Firstname = "Arlette",
                            Lastname = "Verheugen"
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.PlayerThrow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ThrowId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("ThrowId");

                    b.ToTable("PlayerThrows");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7cb2557f-4264-42ad-8411-a864de385c33"),
                            MatchId = new Guid("16d9d127-f6ec-453e-86e6-188b1f9d91ef"),
                            PlayerId = new Guid("2b095fe1-8b94-4cd9-bfa9-d12cecff3637"),
                            ThrowId = new Guid("b75c9bf8-e5ab-440c-8e26-1772e13b9f1d"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4d6ac8b2-6cef-411f-89c4-079c9553eb8f"),
                            MatchId = new Guid("fe34ff9b-c91f-4589-bd99-60849ddef2cc"),
                            PlayerId = new Guid("2b095fe1-8b94-4cd9-bfa9-d12cecff3637"),
                            ThrowId = new Guid("fb6495e0-01ff-4bf5-a919-b6f8e7dc4fd6"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b24f9f0d-7e4e-436c-8147-75922ae670f2"),
                            MatchId = new Guid("fe34ff9b-c91f-4589-bd99-60849ddef2cc"),
                            PlayerId = new Guid("2b095fe1-8b94-4cd9-bfa9-d12cecff3637"),
                            ThrowId = new Guid("8f622ae8-cf51-4690-b892-fcd17a6ae7d5"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f33b7cf3-aaec-478c-a0d4-a858d74d5a32"),
                            MatchId = new Guid("fe34ff9b-c91f-4589-bd99-60849ddef2cc"),
                            PlayerId = new Guid("2b095fe1-8b94-4cd9-bfa9-d12cecff3637"),
                            ThrowId = new Guid("8a4812eb-df35-4af9-a039-4f60c3c8bd4b"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1101573f-3868-46bd-9fc4-0358fd841080"),
                            MatchId = new Guid("16d9d127-f6ec-453e-86e6-188b1f9d91ef"),
                            PlayerId = new Guid("ab4f02c5-cd21-439d-9b3f-68d3c5699ef2"),
                            ThrowId = new Guid("8f622ae8-cf51-4690-b892-fcd17a6ae7d5"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("987eadfc-fd57-4ef0-a3b5-98ba0360afcc"),
                            MatchId = new Guid("fe34ff9b-c91f-4589-bd99-60849ddef2cc"),
                            PlayerId = new Guid("ab4f02c5-cd21-439d-9b3f-68d3c5699ef2"),
                            ThrowId = new Guid("3f975c51-6eb6-4852-8bc5-47a0e5ac2ff1"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cb19d43c-e0b5-4dd0-a5cc-5c4a07987f0d"),
                            MatchId = new Guid("fe34ff9b-c91f-4589-bd99-60849ddef2cc"),
                            PlayerId = new Guid("ab4f02c5-cd21-439d-9b3f-68d3c5699ef2"),
                            ThrowId = new Guid("b02bafbd-5863-42d4-a6a8-f14c36b4a952"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f7f3a8ca-291f-47a3-89bc-b7d80ffbfd8b"),
                            MatchId = new Guid("fe34ff9b-c91f-4589-bd99-60849ddef2cc"),
                            PlayerId = new Guid("ab4f02c5-cd21-439d-9b3f-68d3c5699ef2"),
                            ThrowId = new Guid("383206d0-2a01-474f-b8f7-ec22ac33950f"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Throw", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Score")
                        .IsUnique();

                    b.ToTable("Throws");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b75c9bf8-e5ab-440c-8e26-1772e13b9f1d"),
                            Score = 15
                        },
                        new
                        {
                            Id = new Guid("fb6495e0-01ff-4bf5-a919-b6f8e7dc4fd6"),
                            Score = 30
                        },
                        new
                        {
                            Id = new Guid("f5ea09e2-419d-45a0-b3ad-2a77e781a4bf"),
                            Score = 45
                        },
                        new
                        {
                            Id = new Guid("5ab532fe-396b-446c-8470-097eb17c927e"),
                            Score = 16
                        },
                        new
                        {
                            Id = new Guid("8f622ae8-cf51-4690-b892-fcd17a6ae7d5"),
                            Score = 32
                        },
                        new
                        {
                            Id = new Guid("59e8b242-2a8e-4e52-85ad-a9b6e47882a9"),
                            Score = 48
                        },
                        new
                        {
                            Id = new Guid("8a4812eb-df35-4af9-a039-4f60c3c8bd4b"),
                            Score = 17
                        },
                        new
                        {
                            Id = new Guid("735c406a-18ca-4608-850e-f389ac4c4bd0"),
                            Score = 34
                        },
                        new
                        {
                            Id = new Guid("3f975c51-6eb6-4852-8bc5-47a0e5ac2ff1"),
                            Score = 51
                        },
                        new
                        {
                            Id = new Guid("b95ea2ac-e098-47fb-a0e7-f96926976868"),
                            Score = 18
                        },
                        new
                        {
                            Id = new Guid("7c3bf391-72fc-4b9b-8da3-22bdc8157a31"),
                            Score = 36
                        },
                        new
                        {
                            Id = new Guid("c2ebc31c-182c-4d58-b891-6fc075d664b2"),
                            Score = 54
                        },
                        new
                        {
                            Id = new Guid("e3d6ed56-0dcd-4818-a087-40ad3fbbcb65"),
                            Score = 19
                        },
                        new
                        {
                            Id = new Guid("7fff1dd5-14f5-4830-83b4-b7e15043a55d"),
                            Score = 38
                        },
                        new
                        {
                            Id = new Guid("cbdf7449-7624-42cc-99ae-112d1fdde073"),
                            Score = 57
                        },
                        new
                        {
                            Id = new Guid("d624c2a9-bc3e-4823-9dad-7da90fcd554f"),
                            Score = 20
                        },
                        new
                        {
                            Id = new Guid("b02bafbd-5863-42d4-a6a8-f14c36b4a952"),
                            Score = 40
                        },
                        new
                        {
                            Id = new Guid("a8a71ea6-95e2-4ee5-a7b2-56268de3f945"),
                            Score = 60
                        },
                        new
                        {
                            Id = new Guid("c2fdc080-6af5-4568-b3e9-ed5dec946c2b"),
                            Score = 25
                        },
                        new
                        {
                            Id = new Guid("383206d0-2a01-474f-b8f7-ec22ac33950f"),
                            Score = 50
                        });
                });

            modelBuilder.Entity("MatchPlayer", b =>
                {
                    b.HasOne("Pin.CricketDarts.Core.Entities.Match", null)
                        .WithMany()
                        .HasForeignKey("MatchesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pin.CricketDarts.Core.Entities.Player", null)
                        .WithMany()
                        .HasForeignKey("PlayersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.PlayerThrow", b =>
                {
                    b.HasOne("Pin.CricketDarts.Core.Entities.Match", "Match")
                        .WithMany()
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pin.CricketDarts.Core.Entities.Player", "Player")
                        .WithMany("AllThrows")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pin.CricketDarts.Core.Entities.Throw", "Throws")
                        .WithMany("PlayerThrows")
                        .HasForeignKey("ThrowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("Player");

                    b.Navigation("Throws");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Player", b =>
                {
                    b.Navigation("AllThrows");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Throw", b =>
                {
                    b.Navigation("PlayerThrows");
                });
#pragma warning restore 612, 618
        }
    }
}
