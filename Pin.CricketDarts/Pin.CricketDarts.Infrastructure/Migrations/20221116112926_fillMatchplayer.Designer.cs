// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pin.CricketDarts.Infrastructure.Data;

#nullable disable

namespace Pin.CricketDarts.Infrastructure.Migrations
{
    [DbContext(typeof(DbDartsContext))]
    [Migration("20221116112926_fillMatchplayer")]
    partial class fillMatchplayer
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MatchPlayer", b =>
                {
                    b.Property<Guid>("MatchesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MatchesId", "PlayersId");

                    b.HasIndex("PlayersId");

                    b.ToTable("MatchPlayer");

                    b.HasData(
                        new
                        {
                            MatchesId = new Guid("80efdf1a-5163-4220-bd14-30005e56cf3c"),
                            PlayersId = new Guid("7cec66aa-ab38-48ce-835a-120eb2ff1440")
                        },
                        new
                        {
                            MatchesId = new Guid("6b0b13c6-eca1-41b3-8eaa-a234625ac027"),
                            PlayersId = new Guid("7cec66aa-ab38-48ce-835a-120eb2ff1440")
                        },
                        new
                        {
                            MatchesId = new Guid("80efdf1a-5163-4220-bd14-30005e56cf3c"),
                            PlayersId = new Guid("825ea639-8bac-43d9-bb65-b1c5f35d95ad")
                        },
                        new
                        {
                            MatchesId = new Guid("6b0b13c6-eca1-41b3-8eaa-a234625ac027"),
                            PlayersId = new Guid("825ea639-8bac-43d9-bb65-b1c5f35d95ad")
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Match", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActiveGame")
                        .HasColumnType("bit");

                    b.Property<int>("PlayerOneScore")
                        .HasColumnType("int");

                    b.Property<int>("PlayerTwoScore")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Matches");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80efdf1a-5163-4220-bd14-30005e56cf3c"),
                            IsActiveGame = false,
                            PlayerOneScore = 0,
                            PlayerTwoScore = 0,
                            TimeStamp = new DateTime(2022, 11, 16, 12, 29, 26, 542, DateTimeKind.Local).AddTicks(1774)
                        },
                        new
                        {
                            Id = new Guid("6b0b13c6-eca1-41b3-8eaa-a234625ac027"),
                            IsActiveGame = false,
                            PlayerOneScore = 0,
                            PlayerTwoScore = 0,
                            TimeStamp = new DateTime(2022, 11, 16, 14, 29, 26, 542, DateTimeKind.Local).AddTicks(1811)
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Player");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7cec66aa-ab38-48ce-835a-120eb2ff1440"),
                            Name = "Benny"
                        },
                        new
                        {
                            Id = new Guid("825ea639-8bac-43d9-bb65-b1c5f35d95ad"),
                            Name = "Yoran"
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.PlayerThrow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ThrowId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("ThrowId");

                    b.ToTable("PlayerThrows");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8ff42dbd-8ff9-41a1-8b92-25074414d042"),
                            MatchId = new Guid("6b0b13c6-eca1-41b3-8eaa-a234625ac027"),
                            PlayerId = new Guid("7cec66aa-ab38-48ce-835a-120eb2ff1440"),
                            ThrowId = new Guid("c22f55ba-0bd3-4c02-8999-e420652a377f"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4fdb0f0a-338c-46a6-bb7c-82ff3390c0da"),
                            MatchId = new Guid("80efdf1a-5163-4220-bd14-30005e56cf3c"),
                            PlayerId = new Guid("7cec66aa-ab38-48ce-835a-120eb2ff1440"),
                            ThrowId = new Guid("42383aff-09db-4d1a-b239-09eda0a13b92"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("dd3b1e81-ecfd-4b59-a988-c17d65bb05f6"),
                            MatchId = new Guid("80efdf1a-5163-4220-bd14-30005e56cf3c"),
                            PlayerId = new Guid("7cec66aa-ab38-48ce-835a-120eb2ff1440"),
                            ThrowId = new Guid("4fb886c3-d444-4592-9a0a-fb3f83b667ac"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("aedc8c4c-fefa-48ee-a983-4e28fdf5bf5d"),
                            MatchId = new Guid("80efdf1a-5163-4220-bd14-30005e56cf3c"),
                            PlayerId = new Guid("7cec66aa-ab38-48ce-835a-120eb2ff1440"),
                            ThrowId = new Guid("952f3290-e579-48f1-a579-6a6fd2677fdc"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("37d8ce85-6442-498b-bcc4-1df85e41ac80"),
                            MatchId = new Guid("6b0b13c6-eca1-41b3-8eaa-a234625ac027"),
                            PlayerId = new Guid("825ea639-8bac-43d9-bb65-b1c5f35d95ad"),
                            ThrowId = new Guid("14561aa4-39e5-4fce-b98b-0b80463fd269"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("972438f6-1d38-40e2-a137-cf5f59ddfc2d"),
                            MatchId = new Guid("80efdf1a-5163-4220-bd14-30005e56cf3c"),
                            PlayerId = new Guid("825ea639-8bac-43d9-bb65-b1c5f35d95ad"),
                            ThrowId = new Guid("a71589d6-40b5-44f9-bc61-803ac403bab4"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("59eea219-e244-4397-b612-82568fb3d34d"),
                            MatchId = new Guid("80efdf1a-5163-4220-bd14-30005e56cf3c"),
                            PlayerId = new Guid("825ea639-8bac-43d9-bb65-b1c5f35d95ad"),
                            ThrowId = new Guid("62f79254-7b84-4cc8-b51f-e01feb260701"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7d8c748d-0082-4a21-948d-142676475489"),
                            MatchId = new Guid("80efdf1a-5163-4220-bd14-30005e56cf3c"),
                            PlayerId = new Guid("825ea639-8bac-43d9-bb65-b1c5f35d95ad"),
                            ThrowId = new Guid("49ecaac4-bb60-4cee-9825-4c395d4cb32d"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Throw", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Bull")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Eighteen")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Fifteen")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Nineteen")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Seventeen")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Sixteen")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Twenty")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Throws");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c22f55ba-0bd3-4c02-8999-e420652a377f"),
                            Bull = (byte)0,
                            Eighteen = (byte)0,
                            Fifteen = (byte)0,
                            Nineteen = (byte)0,
                            Seventeen = (byte)3,
                            Sixteen = (byte)0,
                            Twenty = (byte)2
                        },
                        new
                        {
                            Id = new Guid("42383aff-09db-4d1a-b239-09eda0a13b92"),
                            Bull = (byte)0,
                            Eighteen = (byte)0,
                            Fifteen = (byte)2,
                            Nineteen = (byte)0,
                            Seventeen = (byte)0,
                            Sixteen = (byte)0,
                            Twenty = (byte)3
                        },
                        new
                        {
                            Id = new Guid("4fb886c3-d444-4592-9a0a-fb3f83b667ac"),
                            Bull = (byte)0,
                            Eighteen = (byte)0,
                            Fifteen = (byte)0,
                            Nineteen = (byte)0,
                            Seventeen = (byte)0,
                            Sixteen = (byte)3,
                            Twenty = (byte)2
                        },
                        new
                        {
                            Id = new Guid("952f3290-e579-48f1-a579-6a6fd2677fdc"),
                            Bull = (byte)0,
                            Eighteen = (byte)1,
                            Fifteen = (byte)0,
                            Nineteen = (byte)2,
                            Seventeen = (byte)0,
                            Sixteen = (byte)0,
                            Twenty = (byte)0
                        },
                        new
                        {
                            Id = new Guid("14561aa4-39e5-4fce-b98b-0b80463fd269"),
                            Bull = (byte)2,
                            Eighteen = (byte)0,
                            Fifteen = (byte)0,
                            Nineteen = (byte)0,
                            Seventeen = (byte)0,
                            Sixteen = (byte)0,
                            Twenty = (byte)2
                        },
                        new
                        {
                            Id = new Guid("a71589d6-40b5-44f9-bc61-803ac403bab4"),
                            Bull = (byte)0,
                            Eighteen = (byte)0,
                            Fifteen = (byte)3,
                            Nineteen = (byte)0,
                            Seventeen = (byte)0,
                            Sixteen = (byte)0,
                            Twenty = (byte)2
                        },
                        new
                        {
                            Id = new Guid("62f79254-7b84-4cc8-b51f-e01feb260701"),
                            Bull = (byte)0,
                            Eighteen = (byte)2,
                            Fifteen = (byte)3,
                            Nineteen = (byte)0,
                            Seventeen = (byte)0,
                            Sixteen = (byte)0,
                            Twenty = (byte)0
                        },
                        new
                        {
                            Id = new Guid("49ecaac4-bb60-4cee-9825-4c395d4cb32d"),
                            Bull = (byte)0,
                            Eighteen = (byte)1,
                            Fifteen = (byte)0,
                            Nineteen = (byte)2,
                            Seventeen = (byte)0,
                            Sixteen = (byte)0,
                            Twenty = (byte)0
                        });
                });

            modelBuilder.Entity("MatchPlayer", b =>
                {
                    b.HasOne("Pin.CricketDarts.Core.Entities.Match", null)
                        .WithMany()
                        .HasForeignKey("MatchesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pin.CricketDarts.Core.Entities.Player", null)
                        .WithMany()
                        .HasForeignKey("PlayersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.PlayerThrow", b =>
                {
                    b.HasOne("Pin.CricketDarts.Core.Entities.Match", "Match")
                        .WithMany()
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pin.CricketDarts.Core.Entities.Player", "Player")
                        .WithMany("AllThrows")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pin.CricketDarts.Core.Entities.Throw", "Throws")
                        .WithMany("PlayerThrows")
                        .HasForeignKey("ThrowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("Player");

                    b.Navigation("Throws");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Player", b =>
                {
                    b.Navigation("AllThrows");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Throw", b =>
                {
                    b.Navigation("PlayerThrows");
                });
#pragma warning restore 612, 618
        }
    }
}
