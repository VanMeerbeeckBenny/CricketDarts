// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pin.CricketDarts.Infrastructure.Data;

#nullable disable

namespace Pin.CricketDarts.Infrastructure.Migrations
{
    [DbContext(typeof(DbDartsContext))]
    [Migration("20221204004123_AddScoreToMatchPlayer")]
    partial class AddScoreToMatchPlayer
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Match", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActiveGame")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Matches");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0a94fbbc-feb3-4eb2-97b2-893842b7b315"),
                            IsActiveGame = false,
                            TimeStamp = new DateTime(2022, 12, 4, 1, 41, 23, 762, DateTimeKind.Local).AddTicks(2363)
                        },
                        new
                        {
                            Id = new Guid("39dd33b6-cbed-48f0-81e9-656e3946a83f"),
                            IsActiveGame = false,
                            TimeStamp = new DateTime(2022, 12, 4, 3, 41, 23, 762, DateTimeKind.Local).AddTicks(2402)
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.MatchPlayer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.HasIndex("PlayerId");

                    b.ToTable("MatchPlayer");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Player");

                    b.HasData(
                        new
                        {
                            Id = new Guid("03d99865-d39b-4026-9427-7e0106ee69ab"),
                            Firstname = "Benny",
                            Lastname = "Van Meerbeeck"
                        },
                        new
                        {
                            Id = new Guid("6ab39473-4431-4f4d-983a-18440f682eea"),
                            Firstname = "Arlette",
                            Lastname = "Verheugen"
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.PlayerThrow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ScoreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("ScoreId");

                    b.ToTable("PlayerThrow");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2b194257-4ffd-494b-aff4-3f909d54db26"),
                            MatchId = new Guid("39dd33b6-cbed-48f0-81e9-656e3946a83f"),
                            PlayerId = new Guid("03d99865-d39b-4026-9427-7e0106ee69ab"),
                            ScoreId = new Guid("a41d4809-1e62-40f3-ada6-34c112960837"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d48228b5-f2e8-4892-8a91-c86362b2ddfd"),
                            MatchId = new Guid("0a94fbbc-feb3-4eb2-97b2-893842b7b315"),
                            PlayerId = new Guid("03d99865-d39b-4026-9427-7e0106ee69ab"),
                            ScoreId = new Guid("375c556c-f84c-4226-a6bc-9d65185874a8"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f987877c-9597-47e6-8363-e23ee17137c3"),
                            MatchId = new Guid("0a94fbbc-feb3-4eb2-97b2-893842b7b315"),
                            PlayerId = new Guid("03d99865-d39b-4026-9427-7e0106ee69ab"),
                            ScoreId = new Guid("a3ac94a5-bec7-4283-8216-f801ead93444"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("bb324c7b-7d6c-45ac-9a67-478156c69835"),
                            MatchId = new Guid("0a94fbbc-feb3-4eb2-97b2-893842b7b315"),
                            PlayerId = new Guid("03d99865-d39b-4026-9427-7e0106ee69ab"),
                            ScoreId = new Guid("136143e8-d590-45ab-8381-45a80e0b9271"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("977686b2-344d-4f8b-9f43-1f42ba9701bd"),
                            MatchId = new Guid("39dd33b6-cbed-48f0-81e9-656e3946a83f"),
                            PlayerId = new Guid("6ab39473-4431-4f4d-983a-18440f682eea"),
                            ScoreId = new Guid("a3ac94a5-bec7-4283-8216-f801ead93444"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ac996e5c-91e8-4495-b780-3088bdf274fd"),
                            MatchId = new Guid("0a94fbbc-feb3-4eb2-97b2-893842b7b315"),
                            PlayerId = new Guid("6ab39473-4431-4f4d-983a-18440f682eea"),
                            ScoreId = new Guid("a4f417f0-163d-4726-9f8e-ab781f4e67c4"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4fdfde8b-6e28-4730-a5d6-e7e62a6198d6"),
                            MatchId = new Guid("0a94fbbc-feb3-4eb2-97b2-893842b7b315"),
                            PlayerId = new Guid("6ab39473-4431-4f4d-983a-18440f682eea"),
                            ScoreId = new Guid("b667f16c-e5cb-46b3-8557-283f97d9e696"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("fc3a7a44-2dcd-4b2c-b16f-29899b4ad02a"),
                            MatchId = new Guid("0a94fbbc-feb3-4eb2-97b2-893842b7b315"),
                            PlayerId = new Guid("6ab39473-4431-4f4d-983a-18440f682eea"),
                            ScoreId = new Guid("351bfd2b-86e2-42a0-b186-8b7d4e9e9e5e"),
                            TimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Point", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OriginalScore")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Score")
                        .IsUnique();

                    b.ToTable("Throws");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a41d4809-1e62-40f3-ada6-34c112960837"),
                            OriginalScore = 15,
                            Score = 15
                        },
                        new
                        {
                            Id = new Guid("375c556c-f84c-4226-a6bc-9d65185874a8"),
                            OriginalScore = 15,
                            Score = 30
                        },
                        new
                        {
                            Id = new Guid("1726bfe8-2a28-4009-a0dc-86967d19f6af"),
                            OriginalScore = 15,
                            Score = 45
                        },
                        new
                        {
                            Id = new Guid("3eb1232d-fda4-4316-8dc1-3e7fee38671e"),
                            OriginalScore = 16,
                            Score = 16
                        },
                        new
                        {
                            Id = new Guid("a3ac94a5-bec7-4283-8216-f801ead93444"),
                            OriginalScore = 16,
                            Score = 32
                        },
                        new
                        {
                            Id = new Guid("4e730f72-b5d9-4491-a5bc-63c13772685e"),
                            OriginalScore = 16,
                            Score = 48
                        },
                        new
                        {
                            Id = new Guid("136143e8-d590-45ab-8381-45a80e0b9271"),
                            OriginalScore = 17,
                            Score = 17
                        },
                        new
                        {
                            Id = new Guid("60fd4fd8-7985-4f13-98de-b25b32e345aa"),
                            OriginalScore = 17,
                            Score = 34
                        },
                        new
                        {
                            Id = new Guid("a4f417f0-163d-4726-9f8e-ab781f4e67c4"),
                            OriginalScore = 17,
                            Score = 51
                        },
                        new
                        {
                            Id = new Guid("bdb5a8a6-3c59-4dcf-82a0-7a54dff9da55"),
                            OriginalScore = 18,
                            Score = 18
                        },
                        new
                        {
                            Id = new Guid("032c2567-f153-4397-bc3f-db70940fcec1"),
                            OriginalScore = 18,
                            Score = 36
                        },
                        new
                        {
                            Id = new Guid("d5dc453c-5121-4f88-bf33-fcbe5f0a1844"),
                            OriginalScore = 18,
                            Score = 54
                        },
                        new
                        {
                            Id = new Guid("77aac1de-133e-4b2b-b892-40fe79d0a7d6"),
                            OriginalScore = 19,
                            Score = 19
                        },
                        new
                        {
                            Id = new Guid("0b40d326-e377-4e36-ae4a-75f33cf3fc1c"),
                            OriginalScore = 19,
                            Score = 38
                        },
                        new
                        {
                            Id = new Guid("dd562643-1671-4c6d-8a4e-e2e8b8c1bc0c"),
                            OriginalScore = 19,
                            Score = 57
                        },
                        new
                        {
                            Id = new Guid("b850ea0a-46b5-4a87-8325-75a7351aff26"),
                            OriginalScore = 20,
                            Score = 20
                        },
                        new
                        {
                            Id = new Guid("b667f16c-e5cb-46b3-8557-283f97d9e696"),
                            OriginalScore = 20,
                            Score = 40
                        },
                        new
                        {
                            Id = new Guid("ecaa5561-fc68-41a5-947c-348347faac7c"),
                            OriginalScore = 20,
                            Score = 60
                        },
                        new
                        {
                            Id = new Guid("150e9194-aae0-47aa-9135-e2e5885945ce"),
                            OriginalScore = 25,
                            Score = 25
                        },
                        new
                        {
                            Id = new Guid("351bfd2b-86e2-42a0-b186-8b7d4e9e9e5e"),
                            OriginalScore = 25,
                            Score = 50
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.MatchPlayer", b =>
                {
                    b.HasOne("Pin.CricketDarts.Core.Entities.Match", "Match")
                        .WithMany("PlayerMatch")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pin.CricketDarts.Core.Entities.Player", "Player")
                        .WithMany("Matches")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.PlayerThrow", b =>
                {
                    b.HasOne("Pin.CricketDarts.Core.Entities.Match", "Match")
                        .WithMany()
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pin.CricketDarts.Core.Entities.Player", "Player")
                        .WithMany("AllThrows")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pin.CricketDarts.Core.Entities.Point", "Score")
                        .WithMany("PlayerThrows")
                        .HasForeignKey("ScoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("Player");

                    b.Navigation("Score");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Match", b =>
                {
                    b.Navigation("PlayerMatch");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Player", b =>
                {
                    b.Navigation("AllThrows");

                    b.Navigation("Matches");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Point", b =>
                {
                    b.Navigation("PlayerThrows");
                });
#pragma warning restore 612, 618
        }
    }
}
